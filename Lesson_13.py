# Конкурентное выполнение кода
# Ассинхронное
# Использование потоков
#     программные потоки
#     каждую функцию в своем потоке
#     паралелльно
#     Жертвуем ресурсами, выигрываем в скорости
# GIL - нельзя два и более потоков не могут обратиться к одному и тому же файлу одновременно

from threading import *
from time import sleep

# логику и интерфейс на два отдельных потока

def ping():
    for _ in range(10):
        print("ping")
        sleep(1)


def pong():
    for _ in range(10):
        print("pong")
        sleep(1)

# ping()
# pong()

treads = [Thread]
Thread().start()
Thread().join()

# Синхронизация потоков

# Замок

l = Lock()


# Деде лок - когда поток заблокировал замок, но до его разблокировки попытался заблокировать его еще раз

rl = RLock()



